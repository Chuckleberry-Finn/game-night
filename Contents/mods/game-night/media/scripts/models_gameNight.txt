module Base
{
	model CheckersBox { mesh = WorldItems/cardpack, texture = Item_Boxes/checkersBox_ground, scale = 0.06, }
	model ChessBox { mesh = WorldItems/cardpack, texture = Item_Boxes/chessBox_ground, scale = 0.06, }
	model BackgammonBox { mesh = WorldItems/cardpack, texture = Item_Boxes/backgammonBox_ground, scale = 0.06, }
	model PokerBox { mesh = WorldItems/cardpack, texture = Item_Boxes/PokerBox_ground, scale = 0.06, }
	model GamePiecesWhite_Ground { mesh = WorldItems/coin, texture = modelTextures/GamePieceWhite, scale = 0.003, }
	model GamePieceBlackBackgammon_Ground { mesh = WorldItems/coin, texture = modelTextures/GamePieceBlack, scale = 0.003, }
	model GamePiecesBlack_Ground { mesh = WorldItems/coin, texture = modelTextures/CheckersBlack, scale = 0.004, }
	model GamePiecesRed_Ground { mesh = WorldItems/coin, texture = modelTextures/CheckersRed, scale = 0.004, }
	model WhiteChessPieces { mesh = WorldItems/chess, texture = modelTextures/ChessPieceWhite, scale = 0.004, }
	model BlackChessPieces { mesh = WorldItems/chess, texture = modelTextures/ChessPieceBlack, scale = 0.004,}
	model Dice { mesh = WorldItems/gameNightCube, texture = modelTextures/Dice, scale = 0.0015, }
	model DiceWhite { mesh = WorldItems/gameNightCube, texture = modelTextures/DiceWhite, scale = 0.0015, }
	model PokerChips_Ground { mesh = WorldItems/coin, texture = modelTextures/PokerChips, scale = 0.004, }
	model PokerChipsBlack { mesh = WorldItems/coin, texture = modelTextures/PokerChipsBlack, scale = 0.004, }
	model PokerChipsBlue { mesh = WorldItems/coin, texture = modelTextures/PokerChipsBlue, scale = 0.004, }
	model PokerChipsGreen { mesh = WorldItems/coin, texture = modelTextures/PokerChipsGreen, scale = 0.004, }
	model PokerChipsOrange { mesh = WorldItems/coin, texture = modelTextures/PokerChipsOrange, scale = 0.004, }
	model PokerChipsPurple { mesh = WorldItems/coin, texture = modelTextures/PokerChipsPurple, scale = 0.004, }
	model PokerChipsWhite { mesh = WorldItems/coin, texture = modelTextures/PokerChipsWhite, scale = 0.004, }
	model PokerChipsYellow { mesh = WorldItems/coin, texture = modelTextures/PokerChipsYellow, scale = 0.004, }
	model CardDeck { mesh = WorldItems/cardpack, texture = Item_CardDeck/deckTexture, scale = 0.02, }
	model CardDeckSingle { mesh = WorldItems/card, texture = Item_CardDeck/deckTexture, scale = 0.02, }
    model PlayingCards1 { mesh = WorldItems/cardpack, texture = Item_PlayingCards1/deckTexture, scale = 0.024, }
    model PlayingCards2 { mesh = WorldItems/cardpack, texture = Item_PlayingCards2/deckTexture, scale = 0.024, }
    model PlayingCards3 { mesh = WorldItems/cardpack, texture = Item_PlayingCards3/deckTexture, scale = 0.024, }

	model Dice4 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice4, scale = 0.0015, }
    model Dice6 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice6, scale = 0.0015, }
    model Dice8 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice8, scale = 0.0015, }
    model Dice10 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice10, scale = 0.0015, }
    model Dice12 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice12, scale = 0.0015, }
    model Dice20 { mesh = WorldItems/gameNightCube, texture = modelTextures/dice20, scale = 0.0015, }
    model StellaOcta { mesh = WorldItems/gameNightCube, texture = modelTextures/stellaOcta, scale = 0.0015, }

	model BackgammonBoard_Ground
    {
        mesh = WorldItems/BackgammonBoard,
        texture = Item_InPlayTextures/BackgammonBoard,
		scale = 0.48,
		attachment world { offset = -0.215 -0.0700 0.245, rotate = 0.0000 0.0000 0.0000, }
    }

    model CheckerBoard_Ground
    {
        mesh = WorldItems/CheckerBoard,
        texture = Item_InPlayTextures/CheckerBoard,
		scale = 0.48,
		attachment world { offset = -0.215 -0.0700 0.245, rotate = 0.0000 0.0000 0.0000, }
    }

	model ChessBoard_Ground
	{
		mesh = WorldItems/CheckerBoard,
		texture = Item_InPlayTextures/ChessBoard,
		scale = 0.48,
		attachment world { offset = -0.215 -0.0700 0.245, rotate = 0.0000 0.0000 0.0000, }
	}
}
